Key Principles of Software Engineering
Modularity: Breaking the software into smaller, reusable components that can be developed and tested independently.
Abstraction: Hiding the implementation details of a component and exposing only the necessary functionality to other parts of the software.
Encapsulation: Wrapping up the data and functions of an object into a single unit, and protecting the internal state of an object from external modifications.
Reusability: Creating components that can be used in multiple projects, which can save time and resources.
Maintenance: Regularly updating and improving the software to fix bugs, add new features, and address security vulnerabilities.
Testing: Verifying that the software meets its requirements and is free of bugs.
Design Patterns: Solving recurring problems in software design by providing templates for solving them.
Agile methodologies: Using iterative and incremental development processes that focus on customer satisfaction, rapid delivery, and flexibility.
Continuous Integration & Deployment: Continuously integrating the code changes and deploying them into the production environment.
Main Attributes of Software Engineering
Software Engineering is a systematic, disciplined, quantifiable study and approach to the design, development, operation, and maintenance of a software system. There are four main Attributes of Software Engineering.

Efficiency: It provides a measure of the resource requirement of a software product in an efficient way.
Reliability: It provides the assurance that the product will deliver the same results when used in similar working environment.
Reusability: This attribute makes sure that the module can be used in multiple applications.
Maintainability: It is the ability of the software to be modified, repaired, or enhanced easily with changing requirements.